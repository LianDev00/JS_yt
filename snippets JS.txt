{
  // Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "function anon": {
    "prefix": "funanon",
    "body": [
      "(()=>{",
      " $1",
      "})();"
    ],
  },
  "const": {
    "prefix": "co",
    "body": [
      "const $1"
    ],
  },
  "matches": {
    "prefix": "mat",
    "body": [
      "matches($1)"
    ],
  },
  "if": {
    "prefix": "if",
    "body": [
      "if($1){",
      "$2",
      "}"
    ],
    "description": "personalizado"
  },
  "if else": {
    "prefix": "ife",
    "body": [
      "if($1){",
      "$2",
      "} else($3){",
      "$4",
      "}"
    ]
  },
  "function": {
    "prefix": "fu",
    "body": [
      "function($1){",
      "$2",
      "}"
    ]
  },
  "require": {
    "prefix": "req",
    "body": [
      "require($1)"
    ],
  },
  "module": {
    "prefix": "mod",
    "body": [
      "module"
    ],
  },
  "createServer": {
    "prefix": "crs",
    "body": [
      "createServer(($1) => {",
      "  $2",
      "})"
    ],
  },
  "arrowFunction": {
    "prefix": "arf",
    "body": [
      "($1) => {",
      "  $2",
      "}"
    ],
  },
  "event": {
    "prefix": "e",
    "body": [
      "e => {",
      "  $1",
      "}"
    ],
  },
  ".catch(err)": {
    "prefix": "cater",
    "body": [
      ".catch(err => {",
        "console.log(err)",
        "let message = err.statusText || 'Ocurrio un Error'",
        "$1.innerHTML = `<p>Error ${err.status}: message</p>`",
      "})"
    ],
  },
}